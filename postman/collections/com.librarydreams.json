{
	"info": {
		"_postman_id": "ae189f03-6626-463a-a3f8-385f708f364e",
		"name": "com.librarydreams",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "24041749-ae189f03-6626-463a-a3f8-385f708f364e"
	},
	"item": [
		{
			"name": "testPractice",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07d761f9-e0ee-44b5-9282-b927350542db",
						"exec": [
							"// positive\r",
							"pm.test(\"Valid Status code test\",function(){\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"// negative\r",
							"pm.test(\"Invalid Status code test\",function(){\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"\r",
							"// if statement\r",
							"pm.test(\"statusCode if statement\",function(){\r",
							"    if(responseBody.status===200){\r",
							"        console.log(\"PASS\");\r",
							"    }else{\r",
							"        console.log(\"FAIL\");\r",
							"    }\r",
							"});\r",
							"\r",
							"// Testlerimiz, yanıt veri formatına uyarladığınız sözdizimini kullanarak istek yanıtlarının geçerliliğini sağlayabilir.\r",
							"pm.test(\"response must be valid and have a body\", function () {\r",
							"     pm.response.to.be.ok;\r",
							"     pm.response.to.be.withBody;\r",
							"     pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// statusCode assert method\r",
							"tests['Request resulted in 200 OK'] = responseCode.code === 200;\r",
							"\r",
							"// Content-Type is present(sunuldu mu?)\r",
							"pm.test(\"Content-Type is present\",function(){\r",
							"    pm.response.to.have.header(\"Content-Type\"); \r",
							"});\r",
							"\r",
							"// Response time is less than 200ms ?\r",
							"pm.test(\"Response time is less than 200ms\",function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "2a3e823a-b7cd-445d-bf74-c1c377300da4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://library-app-backend-v2.herokuapp.com/publishers/2",
					"protocol": "https",
					"host": [
						"library-app-backend-v2",
						"herokuapp",
						"com"
					],
					"path": [
						"publishers",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://library-app-backend-v2.herokuapp.com/publishers/32",
			"id": "e0fb67b6-0a81-4c46-804f-92e688d2d890",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/publishers/32",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"publishers",
						"32"
					]
				}
			},
			"response": []
		},
		{
			"name": "publishers_tc01",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bf557f58-b714-43ae-8e88-d2f84ad86962",
						"exec": [
							"// statusCode test\r",
							"pm.test(\"Status code test PASS\",function(){\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// if statement\r",
							"pm.test(\"statusCode if statement PASS\",function(){\r",
							"    if(responseBody.status===200){\r",
							"        console.log(\"PASS\");\r",
							"    }else{\r",
							"        console.log(\"FAIL\");\r",
							"    };\r",
							"});\r",
							"\r",
							"// Testlerimiz, yanıt veri formatına uyarladığınız sözdizimini kullanarak istek yanıtlarının geçerliliğini sağlayabilir.\r",
							"pm.test(\"response must be valid and have a body PASS\", function () {\r",
							"     pm.response.to.be.ok;\r",
							"     pm.response.to.be.withBody;\r",
							"     pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// statusCode assert method\r",
							"tests['Request resulted in 200 OK, PASS'] = responseCode.code === 200;\r",
							"\r",
							"// Content-Type is present(sunuldu mu?)\r",
							"pm.test(\"Content-Type is present\",function(){\r",
							"    pm.response.to.have.header(\"Content-Type\"); \r",
							"    if(responseBody.status===200){\r",
							"        console.log(\"PASS\");\r",
							"    }else{\r",
							"        console.log(\"FAIL\");\r",
							"    }; \r",
							"});\r",
							"\r",
							"// Response time is less than 200ms ?\r",
							"pm.test(\"Response time is less than 200ms\",function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "6e2b62d5-33c9-4b53-ae92-5024192e56f2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/publishers?page=15&size=10&sort=name&type=asc",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"publishers"
					],
					"query": [
						{
							"key": "page",
							"value": "15"
						},
						{
							"key": "size",
							"value": "10"
						},
						{
							"key": "sort",
							"value": "name"
						},
						{
							"key": "type",
							"value": "asc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/publishers/32?name=abakü",
			"id": "1558ea79-c717-4e5e-8f6b-e39bcd10fe81",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/publishers/32?\"name\"=\"abakü\"",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"publishers",
						"32"
					],
					"query": [
						{
							"key": "\"name\"",
							"value": "\"abakü\""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "publishers_post",
			"id": "a72d7565-d96e-4e48-8d46-99aa57e5c7c4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMjYiLCJpYXQiOjE2NzIyNTI0NDAsImV4cCI6MTY3MjMzODg0MH0.H9tUE5ewBaDwbmFiGgYHd1ik9XPsLTNG-yCRBoL6CU_EKZPdphgDK99BOGGwQh6hU-eD6NCPku6g3TV4QBfY3g",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"HarperCollins\",\r\n  \"builtIn\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/publishers",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"publishers"
					]
				}
			},
			"response": []
		},
		{
			"name": "generateToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "51f0f80a-35c5-4110-99ff-918661ae0ce9",
						"exec": [
							"let response = pm.response.json();\r",
							"console.log(response.token);\r",
							"pm.environment.set(\"token\",response.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "2f79dcd6-1d7c-4ccc-8b93-8b1906940591",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"email\": \"cihadatinctest2@gmail.com\",\r\n\"password\":\"test1234@GGG\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUsersWith q parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8bbf8963-72ab-4531-b3e8-beb3bae9aff0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm .response.json();\r",
							"console.log(response.content[0].id);\r",
							"pm.environment.set(\"userId\",response.content[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "b9a82ee8-18d1-44b8-aac0-b49893b7bbee",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users?q=cihad",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "q",
							"value": "cihad"
						},
						{
							"key": "page",
							"value": "1",
							"disabled": true
						},
						{
							"key": "size",
							"value": "2",
							"disabled": true
						},
						{
							"key": "direction",
							"value": "ASC",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "userUpdate",
			"id": "44eda416-bdf8-48b4-b7cc-14c66780ee2f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{           \"firstName\": \"Cihad\",\r\n            \"lastName\": \"Atınç\",\r\n            \"score\": 0,\r\n            \"address\": \"address address\",\r\n            \"phone\": \"555-555-5555\",\r\n            \"birthDate\": \"1988-01-01\",\r\n            \"email\": \"cihadatinctest2@gmail.com\",\r\n            \"createDate\": \"2022-12-14T18:12:51.592\",\r\n            \"builtIn\": false,\r\n            \"roles\": [\r\n                {\r\n                    \"id\": 23,\r\n                    \"name\":\"ROLE_ADMIN\"\r\n                }\r\n            ]\r\n        }\r\n        ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}/user/{{userId}}",
			"id": "791ed503-448f-442b-8414-433d55b7a373",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n            \"firstName\": \"Cihad\",\r\n            \"lastName\": \"Atınç\",\r\n            \"score\": 1,\r\n            \"address\": \"Adress adress\",\r\n            \"phone\": \"555-555-5555\",\r\n            \"birthDate\": \"1988-01-01\",\r\n            \"email\": \"cihadatinctest2@gmail.com\",\r\n            \"createDate\": \"2022-12-14T18:12:51.592\",\r\n             \"builtIn\": false,\r\n         \"roles\": [\r\n      {\r\n          \"id\":3,\r\n      \"name\": \"ROLE_ADMIN\"\r\n    }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://library-app-backend-v2.herokuapp.com/users/126",
					"protocol": "https",
					"host": [
						"library-app-backend-v2",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						"126"
					]
				}
			},
			"response": []
		}
	]
}